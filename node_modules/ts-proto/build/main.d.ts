import { Code } from 'ts-poet';
import { google } from '../build/pbjs';
import { TypeMap } from './types';
import FileDescriptorProto = google.protobuf.FileDescriptorProto;
export declare enum LongOption {
    NUMBER = "number",
    LONG = "long",
    STRING = "string"
}
export declare enum EnvOption {
    NODE = "node",
    BROWSER = "browser",
    BOTH = "both"
}
export declare enum OneofOption {
    PROPERTIES = "properties",
    UNIONS = "unions"
}
export declare type Options = {
    useContext: boolean;
    snakeToCamel: boolean;
    forceLong: LongOption;
    useOptionals: boolean;
    useDate: boolean;
    oneof: OneofOption;
    outputEncodeMethods: boolean;
    outputJsonMethods: boolean;
    stringEnums: boolean;
    outputClientImpl: boolean | 'grpc-web';
    addGrpcMetadata: boolean;
    addNestjsRestParameter: boolean;
    returnObservable: boolean;
    lowerCaseServiceMethods: boolean;
    nestJs: boolean;
    env: EnvOption;
    addUnrecognizedEnum: boolean;
};
export declare function generateFile(typeMap: TypeMap, fileDesc: FileDescriptorProto, parameter: string): [string, Code];
export declare const contextTypeVar = "Context extends DataLoaders";
